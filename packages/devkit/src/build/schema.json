{
  "title": "Karma Target",
  "description": "Karma target options for Build Facade.",
  "type": "object",
  "properties": { 
    "main": {
      "type": "string",
      "description": "The name of the main entry-point file."
    },
    "polyfills": {
      "type": "string",
      "description": "The name of the polyfills file."
    },
    "tsConfig": {
      "type": "string",
      "description": "The name of the TypeScript configuration file."
    },
    "outputName": {
      "type": "string",
      "description": "The name of the main entrypoint.",
      "default": "server.js"
    },
    "outputPath": {
      "type": "string",
      "description": "Path where output will be placed."
    },
    "preserveSymlinks": {
      "type": "boolean",
      "description": "Do not use the real path when resolving modules.",
      "default": false
    },
    "sourceMap": {
      "type": "boolean",
      "description": "Output sourcemaps."
    },
    "watch": {
      "type": "boolean",
      "description": "Run build when files change.",
      "default": false
    },
    "poll": {
      "type": "number",
      "description": "Enable and define the file watching poll time period in milliseconds."
    },
    "assets": {
      "type": "array",
      "description": "List of static application assets.",
      "default": [],
      "items": {
        "$ref": "#/definitions/assetPattern"
      }
    },
    "fileReplacements": {
      "description": "Replace files with other files in the build.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/fileReplacement"
      },
      "default": []
    },
    "aot": {
      "type": "boolean",
      "description": "Build using Ahead of Time compilation."
    },
    "optimization": {
      "type": "boolean",
      "description": "Enables optimization of the build output."
    },
    "progress": {
      "type": "boolean",
      "description": "Log progress to the console while building."
    },
    "verbose": {
      "type": "boolean",
      "description": "Adds more details to output logging."
    },
    "deleteOutputPath": {
      "type": "boolean",
      "description": "Delete the output path before building."
    },
    "extractLicenses": {
      "type": "boolean",
      "description": "Extract all licenses in a separate file, in the case of production builds only."
    }
  },
  "additionalProperties": false,
  "required": [ 
    "outputPath",
    "main",
    "tsConfig"
  ],
  "definitions": {
    "assetPattern": {
      "type": "object",
      "properties": {
        "glob": {
          "type": "string",
          "description": "The pattern to match."
        },
        "input": {
          "type": "string",
          "description": "The input path dir in which to apply 'glob'. Defaults to the project root."
        },
        "output": {
          "type": "string",
          "description": "Absolute path within the output."
        }
      },
      "additionalProperties": false,
      "required": [
        "glob",
        "input",
        "output"
      ]
    },
    "fileReplacement": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "src": {
              "type": "string"
            },
            "replaceWith": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": [
            "src",
            "replaceWith"
          ]
        },
        {
          "type": "object",
          "properties": {
            "replace": {
              "type": "string"
            },
            "with": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": [
            "replace",
            "with"
          ]
        }
      ]
    }
  }
}